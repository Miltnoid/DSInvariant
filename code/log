2019-04-14 17:45:25.476891-04:00 [info ]: 
2019-04-14 17:45:25.477316-04:00 [info ]: ===============================================================================
2019-04-14 17:45:25.478757-04:00 [info ]: VPIE Attempt 0.
2019-04-14 17:45:25.478851-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 17:45:25.480757-04:00 [info ]: VPIE Attempt 1.
2019-04-14 17:45:25.522038-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
   (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_1",
      [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
        ("Cons",
         (Lang.Expr.App (
            (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
               (Lang.Expr.App (
                  (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                     (Lang.Expr.App ((Lang.Expr.Var "not"),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                              (Lang.Expr.Var "l2"))),
                           (Lang.Expr.Var "n1")))
                        ))
                     )),
                  (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_1")))))
               )),
            (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_1"))))))
        ]
      ))
   ))
2019-04-14 17:45:25.525231-04:00 [info ]: VPIE Attempt 2.
2019-04-14 17:45:25.556347-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
   (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_2",
      [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
        ("Cons",
         (Lang.Expr.App (
            (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
               (Lang.Expr.App (
                  (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                     (Lang.Expr.App ((Lang.Expr.Var "not"),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                              (Lang.Expr.Var "l2"))),
                           (Lang.Expr.Ctor ("S",
                              (Lang.Expr.Ctor ("O", (Lang.Expr.Tuple [])))))
                           ))
                        ))
                     )),
                  (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_2")))))
               )),
            (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_2"))))))
        ]
      ))
   ))
2019-04-14 17:45:25.558440-04:00 [info ]: VPIE Attempt 3.
2019-04-14 17:45:25.643043-04:00 [info ]: Candidate Precondition: (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 17:45:25.646676-04:00 [info ]: Verified Precondition: (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:49.882457-04:00 [info ]: 
2019-04-14 19:00:49.882860-04:00 [info ]: ===============================================================================
2019-04-14 19:00:49.884290-04:00 [info ]: VPIE Attempt 0.
2019-04-14 19:00:49.884365-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 19:00:49.886152-04:00 [info ]: VPIE Attempt 1.
2019-04-14 19:00:49.926954-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
   (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_1",
      [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
        ("Cons",
         (Lang.Expr.App (
            (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
               (Lang.Expr.App (
                  (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                     (Lang.Expr.App ((Lang.Expr.Var "not"),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                              (Lang.Expr.Var "l2"))),
                           (Lang.Expr.Var "n1")))
                        ))
                     )),
                  (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_1")))))
               )),
            (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_1"))))))
        ]
      ))
   ))
2019-04-14 19:00:49.930146-04:00 [info ]: VPIE Attempt 2.
2019-04-14 19:00:49.960882-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
   (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_2",
      [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
        ("Cons",
         (Lang.Expr.App (
            (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
               (Lang.Expr.App (
                  (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                     (Lang.Expr.App ((Lang.Expr.Var "not"),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                              (Lang.Expr.Var "l2"))),
                           (Lang.Expr.Ctor ("S",
                              (Lang.Expr.Ctor ("O", (Lang.Expr.Tuple [])))))
                           ))
                        ))
                     )),
                  (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_2")))))
               )),
            (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_2"))))))
        ]
      ))
   ))
2019-04-14 19:00:49.962917-04:00 [info ]: VPIE Attempt 3.
2019-04-14 19:00:50.040712-04:00 [info ]: Candidate Precondition: (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.044242-04:00 [info ]: Verified Precondition: (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.044288-04:00 [info ]: Checking Satisfy Transitivity for: (Lang.Expr.Fix ("lookup",
   (Lang.Type.Arr ((Lang.Type.Var "t"),
      (Lang.Type.Arr ((Lang.Type.Var "nat"), (Lang.Type.Var "bool"))))),
   (Lang.Expr.Func (("l", (Lang.Type.Var "t")),
      (Lang.Expr.Func (("x", (Lang.Type.Var "nat")),
         (Lang.Expr.Match ((Lang.Expr.Var "l"), "l",
            [("Nil", (Lang.Expr.Ctor ("False", (Lang.Expr.Tuple []))));
              ("Cons",
               (Lang.Expr.Match (
                  (Lang.Expr.App (
                     (Lang.Expr.App ((Lang.Expr.Var "compare"),
                        (Lang.Expr.Proj (0, (Lang.Expr.Var "l"))))),
                     (Lang.Expr.Var "x"))),
                  "c",
                  [("EQ", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
                    ("LT",
                     (Lang.Expr.App (
                        (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                           (Lang.Expr.Proj (1, (Lang.Expr.Var "l"))))),
                        (Lang.Expr.Var "x"))));
                    ("GT", (Lang.Expr.Ctor ("False", (Lang.Expr.Tuple []))))]
                  )))
              ]
            ))
         ))
      ))
   ))
2019-04-14 19:00:50.044330-04:00 [info ]: IND >> Strengthening for inductiveness:
                                              (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.044335-04:00 [info ]: VPIE Attempt 0.
2019-04-14 19:00:50.044342-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 19:00:50.044350-04:00 [info ]: Verified Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 19:00:50.044387-04:00 [debug]: IND Delta: (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.044396-04:00 [info ]: Checking Satisfy Transitivity for: (Lang.Expr.Ctor ("Nil", (Lang.Expr.Tuple [])))
2019-04-14 19:00:50.045484-04:00 [info ]: IND >> Strengthening for inductiveness:
                                              (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.045487-04:00 [info ]: VPIE Attempt 0.
2019-04-14 19:00:50.045494-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 19:00:50.046262-04:00 [info ]: Verified Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 19:00:50.046305-04:00 [debug]: IND Delta: (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.046373-04:00 [info ]: Checking Satisfy Transitivity for: (Lang.Expr.Fix ("insert",
   (Lang.Type.Arr ((Lang.Type.Var "t"),
      (Lang.Type.Arr ((Lang.Type.Var "nat"), (Lang.Type.Var "t"))))),
   (Lang.Expr.Func (("l", (Lang.Type.Var "t")),
      (Lang.Expr.Func (("x", (Lang.Type.Var "nat")),
         (Lang.Expr.Match ((Lang.Expr.Var "l"), "lp",
            [("Nil",
              (Lang.Expr.Ctor ("Cons",
                 (Lang.Expr.Tuple
                    [(Lang.Expr.Var "x");
                      (Lang.Expr.Ctor ("Nil", (Lang.Expr.Tuple [])))])
                 )));
              ("Cons",
               (Lang.Expr.Match (
                  (Lang.Expr.App (
                     (Lang.Expr.App ((Lang.Expr.Var "compare"),
                        (Lang.Expr.Var "x"))),
                     (Lang.Expr.Proj (0, (Lang.Expr.Var "lp"))))),
                  "c",
                  [("LT",
                    (Lang.Expr.Ctor ("Cons",
                       (Lang.Expr.Tuple
                          [(Lang.Expr.Var "x"); (Lang.Expr.Var "l")])
                       )));
                    ("EQ", (Lang.Expr.Var "l"));
                    ("GT",
                     (Lang.Expr.Ctor ("Cons",
                        (Lang.Expr.Tuple
                           [(Lang.Expr.Proj (0, (Lang.Expr.Var "lp")));
                             (Lang.Expr.App (
                                (Lang.Expr.App ((Lang.Expr.Var "insert"),
                                   (Lang.Expr.Proj (1, (Lang.Expr.Var "lp")))
                                   )),
                                (Lang.Expr.Var "x")))
                             ])
                        )))
                    ]
                  )))
              ]
            ))
         ))
      ))
   ))
2019-04-14 19:00:50.046416-04:00 [info ]: IND >> Strengthening for inductiveness:
                                              (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.046418-04:00 [info ]: VPIE Attempt 0.
2019-04-14 19:00:50.046424-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 19:00:50.051492-04:00 [info ]: Verified Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 19:00:50.051545-04:00 [debug]: IND Delta: (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.051593-04:00 [info ]: Checking Satisfy Transitivity for: (Lang.Expr.Fix ("delete",
   (Lang.Type.Arr ((Lang.Type.Var "t"),
      (Lang.Type.Arr ((Lang.Type.Var "nat"), (Lang.Type.Var "t"))))),
   (Lang.Expr.Func (("l", (Lang.Type.Var "t")),
      (Lang.Expr.Func (("x", (Lang.Type.Var "nat")),
         (Lang.Expr.Match ((Lang.Expr.Var "l"), "lp",
            [("Nil", (Lang.Expr.Ctor ("Nil", (Lang.Expr.Tuple []))));
              ("Cons",
               (Lang.Expr.Match (
                  (Lang.Expr.App (
                     (Lang.Expr.App ((Lang.Expr.Var "compare"),
                        (Lang.Expr.Var "x"))),
                     (Lang.Expr.Proj (0, (Lang.Expr.Var "lp"))))),
                  "c",
                  [("LT", (Lang.Expr.Var "l"));
                    ("EQ", (Lang.Expr.Proj (1, (Lang.Expr.Var "lp"))));
                    ("GT",
                     (Lang.Expr.Ctor ("Cons",
                        (Lang.Expr.Tuple
                           [(Lang.Expr.Proj (0, (Lang.Expr.Var "lp")));
                             (Lang.Expr.App (
                                (Lang.Expr.App ((Lang.Expr.Var "delete"),
                                   (Lang.Expr.Proj (1, (Lang.Expr.Var "lp")))
                                   )),
                                (Lang.Expr.Var "x")))
                             ])
                        )))
                    ]
                  )))
              ]
            ))
         ))
      ))
   ))
2019-04-14 19:00:50.051636-04:00 [info ]: IND >> Strengthening for inductiveness:
                                              (Lang.Expr.Fix ("f1",
   (Lang.Type.Arr ((Lang.Type.Var "t"), (Lang.Type.Var "bool"))),
   (Lang.Expr.Func (("l1", (Lang.Type.Var "t")),
      (Lang.Expr.Match ((Lang.Expr.Var "l1"), "N_fresh_var_3",
         [("Nil", (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple []))));
           ("Cons",
            (Lang.Expr.App (
               (Lang.Expr.Func (("n1", (Lang.Type.Tuple [])),
                  (Lang.Expr.App (
                     (Lang.Expr.Func (("l2", (Lang.Type.Tuple [])),
                        (Lang.Expr.App (
                           (Lang.Expr.App ((Lang.Expr.Var "and"),
                              (Lang.Expr.App ((Lang.Expr.Var "not"),
                                 (Lang.Expr.App (
                                    (Lang.Expr.App ((Lang.Expr.Var "lookup"),
                                       (Lang.Expr.Var "l2"))),
                                    (Lang.Expr.Var "n1")))
                                 ))
                              )),
                           (Lang.Expr.App ((Lang.Expr.Var "f1"),
                              (Lang.Expr.Var "l2")))
                           ))
                        )),
                     (Lang.Expr.Proj (1, (Lang.Expr.Var "N_fresh_var_3")))))
                  )),
               (Lang.Expr.Proj (0, (Lang.Expr.Var "N_fresh_var_3"))))))
           ]
         ))
      ))
   ))
2019-04-14 19:00:50.051641-04:00 [info ]: VPIE Attempt 0.
2019-04-14 19:00:50.051648-04:00 [info ]: Candidate Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
2019-04-14 19:00:50.055703-04:00 [info ]: Verified Precondition: (Lang.Expr.Func (("x", (Lang.Type.Var "t")),
   (Lang.Expr.Ctor ("True", (Lang.Expr.Tuple [])))))
